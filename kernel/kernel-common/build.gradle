group 'com.springcloud.kernel'
version '1.0-SNAPSHOT'

// buildscript 代码块中脚本优先执行
buildscript {
    // ext 用于定义动态属性
    ext {
        springBootVersion = '2.3.4.RELEASE'
        lombokVersion= '1.18.14'
        springVersion = '5.2.9.RELEASE'
        mybatisVersion = "3.5.6"
        log4jVersion = '2.13.3'
        collections4Version = '4.4'
    }

    //仓库管理
    repositories {
        // 本地maven仓库
        mavenLocal()
        //自定义maven仓库地址
        maven {
            url = 'http://maven.aliyun.com/nexus/content/groups/public/'
        }
        mavenCentral()
        google()
        //和maven中央仓库一样的另一个依赖管理仓库,主要是java
        jcenter()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
        maven { url 'http://oss.jfrog.org/artifactory/oss-snapshot-local/' }
    }
}

repositories {
    mavenCentral()
}

apply plugin: 'java'

dependencies {
    //如果要做jar包分离，此处必须要使用compile,不然系统启动失败，血的教训
    compile(
        // Log4j2
        "org.springframework.boot:spring-boot-starter-log4j2:$springBootVersion",
        "org.projectlombok:lombok:$lombokVersion",
        "org.springframework:spring-beans:$springVersion",
        "org.springframework:spring-core:$springVersion",
        "org.springframework:spring-context:$springVersion",
        "org.mybatis:mybatis:$mybatisVersion",
        //log4j
        "org.apache.logging.log4j:log4j-core:$log4jVersion",
        "org.apache.logging.log4j:log4j-api:$log4jVersion",
        "org.apache.commons:commons-collections4:$collections4Version",
    )
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
    }
}